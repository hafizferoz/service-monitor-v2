{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service-data.service.ts","./src/app/service-data.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { interval, Subscription } from 'rxjs';\r\nimport { ServiceDataService } from './service-data.service';\r\nimport { ServiceData } from './service-data';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  serviceUrl: string;\r\n  appName: string;\r\n  title = 'angular-control-app';\r\n  services: any = [];\r\n  startUrl: string;\r\n  stopUrl: string;\r\n  dateFormat:string = 'dd/MM/yyyy HH:mm:ss';\r\n  private eventSubscription: Subscription;\r\n  errorMessage: string | null = null;\r\n\r\n  constructor(private http: HttpClient, private serviceDataService: ServiceDataService) {\r\n    this.loadServiceData();\r\n    this.subscribeToServiceEvents();\r\n  }\r\n  ngOnInit() {\r\n    // ...\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.eventSubscription) {\r\n      this.eventSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private subscribeToServiceEvents() {\r\n    this.eventSubscription = this.serviceDataService.serviceData$.subscribe(serviceDataList => {\r\n      this.services = serviceDataList;\r\n    });\r\n  }\r\n\r\n  private loadServiceData() {\r\n    console.log(\"service monitor started \");\r\n   // interval(15000).subscribe(() => {\r\n      this.serviceDataService.errorMessage$.subscribe(message => {\r\n        this.errorMessage = message; // Set error message from the service\r\n      });\r\n    this.serviceDataService.serviceData$.subscribe(serviceDataList => {\r\n      console.log(serviceDataList);      \r\n      if(serviceDataList.length==0)\r\n          this.services = [];\r\n      serviceDataList.forEach(serviceData => {\r\n        console.log(\"servicedata: \", serviceData);\r\n        this.monitorService(serviceData);\r\n      });\r\n    });\r\n//  });\r\n  }\r\n\r\n  monitorService(serviceData: ServiceData) {\r\n    const id = serviceData.id;\r\n    const url = serviceData.url;\r\n    const startUrl = serviceData.startUrl;\r\n    const stopUrl = serviceData.stopUrl;\r\n    const name = serviceData.name;\r\n    const startTime = serviceData.startTime;\r\n    const stopTime = serviceData.stopTime;\r\n    const upTime = serviceData.upTime;\r\n    const downTime = serviceData.downTime;\r\n   // const subscription = interval(15000).subscribe(() => {\r\n     // this.http.get<any>(`${url}`).subscribe(data => {\r\n     // this.serviceDataService.getServiceDetails(serviceData).subscribe(data =>{\r\n        const status = serviceData.status;\r\n        const dateTime = new Date();\r\n        const service = this.services.find(s => s.url === url);\r\n        // if(startTime===null)\r\n        //         startTime=dateTime;\r\n       // console.log(\"service: \",service);\r\n        if (!service) {\r\n       const serve =   {\r\n            id,\r\n            name,\r\n            url,\r\n            startUrl,\r\n            stopUrl,\r\n            status,\r\n            startTime,\r\n            stopTime,\r\n            upTime,\r\n            downTime,\r\n           // subscription\r\n          };\r\n          this.services.push(serve);\r\n          //this.updateServiceData(serve);\r\n        } else {\r\n          if (service.status !== status) {\r\n            if (status === 'UP') {\r\n              if (service.stopTime) {\r\n                service.upTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n                service.startTime = dateTime;\r\n                service.stopTime = null;\r\n              } else {\r\n                service.upTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n              }\r\n            } else {\r\n              if (service.stopTime) {\r\n                service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n              } else {\r\n                service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n                service.stopTime = dateTime.toISOString();\r\n              }\r\n              this.serviceDataService.sendEmail(this.services);\r\n            }\r\n            this.updateServiceData(service);\r\n          } else {\r\n            if (status === 'UP') {\r\n              service.upTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n            }else{\r\n              service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n            }\r\n          }\r\n          service.status = status;\r\n          //this.updateServiceData(service);\r\n        }\r\n      // },\r\n      // error => {\r\n      //   console.log(`Error monitoring ${name}: ${error.message}`);\r\n      //   const status = \"DOWN\";\r\n      //   const dateTime = new Date();\r\n      //   const service = this.services.find(s => s.url === url);\r\n      //   // if(startTime===null)\r\n      //   //     startTime=dateTime;\r\n      //   if (!service) {\r\n      //     const serve =   {\r\n      //       id,\r\n      //       name,\r\n      //       url,\r\n      //       startUrl,\r\n      //       stopUrl,\r\n      //       status,\r\n      //       startTime,\r\n      //       stopTime,\r\n      //       upTime,\r\n      //       downTime,\r\n      //       subscription\r\n      //     };\r\n      //     this.services.push(serve);\r\n      //     this.updateServiceData(serve);\r\n      //   } else {\r\n      //     if (service.status === status) {\r\n      //       if (service.stopTime) {\r\n      //         const lastStopTime = service.downTime;\r\n      //         service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n      //         if(lastStopTime!== service.downTime)\r\n      //         this.updateServiceData(service);\r\n      //       } else {\r\n      //         service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n      //         service.stopTime = dateTime.toISOString();\r\n      //         this.updateServiceData(service);\r\n      //       }\r\n      //       this.serviceDataService.sendEmail(this.services);\r\n      //    }\r\n      //     service.status = status;\r\n      //     //this.updateServiceData(service);\r\n      //   }\r\n      // });\r\n      \r\n\r\n    // const index = this.services.findIndex(s => s.url === url);\r\n    // if (index === -1 && !service) {\r\n    //   subscription.unsubscribe();\r\n    // }\r\n   // });\r\n  }\r\n  \r\n  \r\n  getTimeDiff(start: Date, end: Date): string {\r\n    //console.log(\"start:\"+ start);\r\n    //console.log(\"end:\"+ end);\r\n    const diffInMs = Math.abs(end.getTime() - start.getTime());\r\n    const diffInHours = Math.ceil(diffInMs / (1000 * 60 * 60));\r\n    return `${diffInHours} hour(s)`;\r\n  }\r\n  \r\n\r\n  startService(startUrl: string) {\r\n    this.http.post<any>(`${startUrl}`, {}).subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  stopService(stopUrl: string) {\r\n    this.http.post<any>(`${stopUrl}`, {}).subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n  removeService(serviceId: number){\r\n    const data: ServiceData = new ServiceData();\r\n    data.id=serviceId;\r\n    const index = this.services.findIndex((s: any) => s.id === serviceId);\r\n    const service = this.services.find(s => s.id === serviceId);\r\n      // Remove the 'service' object from the array\r\n      if (index !== -1) {\r\n        // Unsubscribe from the interval when the service is removed\r\n        console.log(\"service removed: \",service);\r\n        service.subscription.unsubscribe();\r\n        this.services.splice(index, 1);\r\n      }\r\n      this.serviceDataService.removeServiceData(data);\r\n     // this.loadServiceData();\r\n  }\r\n\r\n  addServiceData() {\r\n    if(this.serviceUrl===null || this.appName===null){\r\n      alert(\"Service Name and URL is required\");\r\n      return;\r\n    }\r\n    const service = this.services.find(s => s.url === this.serviceUrl);\r\n    if(!service){\r\n    const data: ServiceData = new ServiceData();\r\n    data.url = this.serviceUrl;\r\n    data.startUrl=this.startUrl;\r\n    data.stopUrl=this.stopUrl;\r\n    data.name = this.appName;\r\n    data.startTime= new Date().toISOString();\r\n   \r\n    this.serviceDataService.addServiceData(data);\r\n   // this.loadServiceData();\r\n    \r\n    }\r\n    else {\r\n      alert(\"Service url \" + this.serviceUrl +\" already exists\");\r\n    }\r\n\r\n  }\r\n  updateServiceData(service: any) {\r\n    const data: ServiceData = new ServiceData();\r\n    data.url = service.url;\r\n    data.startUrl=service.startUrl;\r\n    data.stopUrl=service.stopUrl;\r\n    data.name = service.name;\r\n    data.startTime = service.startTime;\r\n    data.stopTime = service.stopTime;\r\n    data.downTime=service.downTime;\r\n    data.status = service.status;\r\n    data.upTime = service.upTime;\r\n    data.id=service.id;\r\n    this.serviceDataService.updateServiceData(data);\r\n\r\n  }\r\n}\r\n","<div class=\"image-container\">\r\n<img src=\"assets/monitor.gif\" alt=\"Service Monitor\" width=\"200\" height=\"150\">\r\n</div>\r\n<h1 class=\"center-text\">Service Monitoring Dashboard\r\n</h1>\r\n<!-- Display the error message if it's not null -->\r\n<div *ngIf=\"errorMessage\" class=\"error-message\">\r\n  {{ errorMessage }}\r\n</div>\r\n\r\n<div>\r\n  <h2>Monitor Services</h2>\r\n  <form #serviceDataForm=\"ngForm\">\r\n   <tr style=\"background-color: #f2f2f2;\"> <td>\r\n    <label>\r\n      Application Name:\r\n      <input type=\"text\" name=\"appName\" [(ngModel)]=\"appName\" required>\r\n    </label>\r\n  </td>\r\n    <br><br>\r\n    <td>\r\n    <label>\r\n      Service URL:\r\n      <input type=\"text\" name=\"serviceUrl\" [(ngModel)]=\"serviceUrl\" required>\r\n    </label>\r\n  </td>\r\n    <br>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n    <label>\r\n      Start URL:\r\n      <input type=\"text\" name=\"serviceDomain\" [(ngModel)]=\"startUrl\" required>\r\n    </label>\r\n  </td>\r\n    <br>\r\n    <td>\r\n    <label>\r\n      Stop URL:\r\n      <input type=\"text\" name=\"serviceDomain\" [(ngModel)]=\"stopUrl\" required>\r\n    </label>\r\n  </td>\r\n</tr>\r\n    <br>\r\n    <button type=\"submit\" (click)=\"addServiceData()\">Add Service Data</button>\r\n  </form>\r\n</div>\r\n<br><br>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>URL</th>\r\n      <th>Status</th>\r\n      <th>Last Up Time</th>\r\n      <th>Last Down Time</th>\r\n      <th>Up Time</th>\r\n      <th>Down Time</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let service of services\">\r\n      <td>{{ service.name }}</td>\r\n      <td>{{ service.url }}</td>\r\n      <td [ngClass]=\"{'status-up': service.status == 'UP', 'status-down': service.status == 'DOWN'}\">{{ service.status }}</td>\r\n      <td>{{ service.startTime | date:'medium' }}</td>\r\n      <td>{{ service.stopTime ? (service.stopTime | date:'medium') : '' }}</td>\r\n      <td *ngIf=\"service.upTime\">{{ service.upTime }}</td>\r\n      <td *ngIf=\"!service.upTime\">N/A</td>\r\n      <td *ngIf=\"service.downTime\">{{ service.downTime }}</td>\r\n      <td *ngIf=\"!service.downTime\">N/A</td>\r\n      <td>\r\n        <button [disabled]=\"service.status === 'UP'\" (click)=\"startService(service.startUrl)\">Start</button>\r\n        <button [disabled]=\"service.status === 'DOWN'\" (click)=\"stopService(service.stopUrl)\">Stop</button>\r\n        <button  (click)=\"removeService(service.id)\">Remove</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; // Import FormsModule\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { ServiceData } from './service-data';\r\nimport { ServiceDetails } from './service-details';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ServiceEvent } from './service-event';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceDataService {\r\n \r\n  private serviceDataUrl = '/servicedata'; // URL to Spring Boot backend\r\n  private serviceDataSubject = new BehaviorSubject<ServiceData[]>([]);\r\n  public serviceData$ = this.serviceDataSubject.asObservable();\r\n  private errorMessageSubject = new Subject<string>();\r\n  public errorMessage$: Observable<string> = this.errorMessageSubject.asObservable();\r\n  constructor(private zone: NgZone, private http: HttpClient) { \r\n    this.loadServiceData();\r\n    this.subscribeToServiceEvents();\r\n  }\r\n\r\n  // private subscribeToServiceEvents() {\r\n  //   console.log(\"subcribing service-event:\");\r\n  //   this.http.get<ServiceEvent[]>(`${this.serviceDataUrl}/service-events`).subscribe(\r\n  //     (responses: ServiceEvent[]) => {\r\n  //       console.log(\"responses:\", responses);\r\n  //       const updatedServices = responses.map(response => {\r\n  //         console.log(\"response:\", response);\r\n  //         const existingService = this.serviceDataSubject.value.find(service => service.id === response.serviceId);\r\n  //         if (existingService) {\r\n  //           existingService.status = response.serviceResponse.status;\r\n  //           // Update other properties as needed (uptime, downtime, etc.)\r\n  //         }\r\n  //         return existingService;\r\n  //       });\r\n  //       this.serviceDataSubject.next(updatedServices);\r\n  //     },\r\n  //     error => {\r\n  //       console.error('Error getting service events:', error);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  private subscribeToServiceEvents() {\r\n    console.log(\"subcribing service-event:\");\r\n    this.getMessages().subscribe({\r\n      next: (data: any) => {\r\n        console.log(\"response:\", data);\r\n        this.errorMessageSubject.next(null); // Clear any previous error message \r\n        const response = JSON.parse(data); // Assuming data is a JSON string\r\n        const existingService = this.serviceDataSubject.value.find(service => service.id === response.id);\r\n        if (existingService) {\r\n          existingService.status = response.response.status;\r\n          // Update other properties as needed (uptime, downtime, etc.)\r\n        }\r\n        this.serviceDataSubject.next([...this.serviceDataSubject.value]); // Update the subject with the modified data\r\n      },\r\n      error: error => {\r\n        this.errorMessageSubject.next('Error fetching service events. Please refresh page.'); // Emit error message\r\n        console.error('Error getting service events:', error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  private getMessages(): Observable<any> {\r\n    return Observable.create(\r\n      observer => {\r\n        let source = new EventSource(`${this.serviceDataUrl}/service-events`);\r\n        source.onmessage = event => {\r\n          this.zone.run(() => {\r\n            console.log(\"event:\",event);\r\n            this.errorMessageSubject.next(null); // Clear any previous error message \r\n            observer.next(event.data);\r\n          });\r\n        };\r\n        source.onerror = event => {\r\n          this.zone.run(() => {\r\n           // console.log(\"event error:\",event);\r\n           this.errorMessageSubject.next('Error fetching service events. Please refresh page'); // Emit error message\r\n            observer.error(event);\r\n          });\r\n        };\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n  private loadServiceData() {\r\n    this.http.get<ServiceData[]>(this.serviceDataUrl + '/load').subscribe(data => {\r\n      this.serviceDataSubject.next(data);\r\n      console.log(\"data:\", data);\r\n    }, error => {\r\n      this.serviceDataSubject.next(null);\r\n      console.log(\"Error loading service data: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public addServiceData(serviceData: ServiceData) {\r\n    this.http.post<ServiceData>(this.serviceDataUrl + '/add', serviceData).subscribe(() => {\r\n      this.loadServiceData();\r\n    }, error => {\r\n      console.log(\"Error adding service data: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public updateServiceData(serviceData: ServiceData) {\r\n    this.http.post<ServiceData>(this.serviceDataUrl + '/update', serviceData).subscribe(() => {\r\n      this.loadServiceData();\r\n    }, error => {\r\n      console.log(\"Error updating service data: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public getServiceDetails(serviceData: ServiceData) {\r\n    return this.http.post<ServiceDetails>(this.serviceDataUrl + '/getdetails', serviceData);\r\n    // .subscribe(data => {\r\n    //   console.log(data);\r\n    //   return data;\r\n    // });\r\n  }\r\n  public removeServiceData(serviceData: ServiceData) {\r\n    this.http.post(this.serviceDataUrl + '/remove', serviceData).subscribe(() => {\r\n      console.log(\"removed:\" + serviceData.id);\r\n      this.loadServiceData();\r\n    },\r\n    error => {\r\n      console.log(\"Error removing service: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public sendEmail(serviceList: any[]) {\r\n    const downServices = serviceList.filter(service => service.status === 'DOWN');\r\n    \r\n    if (downServices.length > 0) {\r\n      const serviceDataList: ServiceData[] = downServices.map(service => {\r\n        const serviceData:ServiceData = {\r\n          id: service.id,\r\n          name: service.name,\r\n          status: service.status,\r\n          url: service.url,\r\n          startUrl: service.startUrl,\r\n          stopUrl: service.stopUrl,\r\n          startTime: service.startTime,\r\n          stopTime: service.stopTime,\r\n          upTime: service.upTime,\r\n          downTime: service.downTime\r\n        };\r\n        return serviceData;\r\n      });\r\n      this.http.post<void>(`${this.serviceDataUrl}/sendEmail`, serviceDataList).subscribe(() => {\r\n        console.log('Email sent successfully.');\r\n      }, error => {\r\n        console.log('Error sending email:', error);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","export class ServiceData {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n    url:string;\r\n    startUrl: string;\r\n    stopUrl: string;\r\n    startTime:string;\r\n    stopTime:string;\r\n    upTime:string;\r\n    downTime:string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}