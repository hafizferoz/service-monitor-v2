{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service-data.service.ts","webpack:///src/app/service-data.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","http","serviceDataService","title","services","dateFormat","loadServiceData","subscribeToServiceEvents","eventSubscription","unsubscribe","serviceData$","subscribe","serviceDataList","length","forEach","serviceData","console","log","monitorService","url","startUrl","stopUrl","name","startTime","stopTime","upTime","downTime","status","dateTime","Date","service","find","s","serve","push","getTimeDiff","toISOString","sendEmail","updateServiceData","start","end","diffInMs","Math","abs","getTime","diffInHours","ceil","post","data","serviceId","index","findIndex","subscription","splice","removeServiceData","serviceUrl","appName","alert","addServiceData","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ServiceDataService","serviceDataUrl","serviceDataSubject","asObservable","get","responses","error","next","message","serviceList","downServices","filter","map","providedIn","ServiceData","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { interval, Subscription } from 'rxjs';\r\nimport { ServiceDataService } from './service-data.service';\r\nimport { ServiceData } from './service-data';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  serviceUrl: string;\r\n  appName: string;\r\n  title = 'angular-control-app';\r\n  services: any = [];\r\n  startUrl: string;\r\n  stopUrl: string;\r\n  dateFormat:string = 'dd/MM/yyyy HH:mm:ss';\r\n  private eventSubscription: Subscription;\r\n\r\n  constructor(private http: HttpClient, private serviceDataService: ServiceDataService) {\r\n    this.loadServiceData();\r\n    this.subscribeToServiceEvents();\r\n  }\r\n  ngOnInit() {\r\n    // ...\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.eventSubscription) {\r\n      this.eventSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private subscribeToServiceEvents() {\r\n    this.eventSubscription = this.serviceDataService.serviceData$.subscribe(serviceDataList => {\r\n      this.services = serviceDataList;\r\n    });\r\n  }\r\n\r\n  private loadServiceData() {\r\n    this.serviceDataService.serviceData$.subscribe(serviceDataList => {\r\n      if(serviceDataList.length==0)\r\n          this.services = [];\r\n      serviceDataList.forEach(serviceData => {\r\n        console.log(\"servicedata: \", serviceData);\r\n        this.monitorService(serviceData);\r\n      });\r\n    });\r\n  }\r\n\r\n  monitorService(serviceData: ServiceData) {\r\n    const id = serviceData.id;\r\n    const url = serviceData.url;\r\n    const startUrl = serviceData.startUrl;\r\n    const stopUrl = serviceData.stopUrl;\r\n    const name = serviceData.name;\r\n    const startTime = serviceData.startTime;\r\n    const stopTime = serviceData.stopTime;\r\n    const upTime = serviceData.upTime;\r\n    const downTime = serviceData.downTime;\r\n   // const subscription = interval(15000).subscribe(() => {\r\n     // this.http.get<any>(`${url}`).subscribe(data => {\r\n     // this.serviceDataService.getServiceDetails(serviceData).subscribe(data =>{\r\n        const status = serviceData.status;\r\n        const dateTime = new Date();\r\n        const service = this.services.find(s => s.url === url);\r\n        // if(startTime===null)\r\n        //         startTime=dateTime;\r\n        if (!service) {\r\n       const serve =   {\r\n            id,\r\n            name,\r\n            url,\r\n            startUrl,\r\n            stopUrl,\r\n            status,\r\n            startTime,\r\n            stopTime,\r\n            upTime,\r\n            downTime,\r\n           // subscription\r\n          };\r\n          this.services.push(serve);\r\n          //this.updateServiceData(serve);\r\n        } else {\r\n          if (service.status !== status) {\r\n            if (status === 'UP') {\r\n              if (service.stopTime) {\r\n                service.upTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n                service.startTime = dateTime;\r\n                service.stopTime = null;\r\n              } else {\r\n                service.upTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n              }\r\n            } else {\r\n              if (service.stopTime) {\r\n                service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n              } else {\r\n                service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n                service.stopTime = dateTime.toISOString();\r\n              }\r\n              this.serviceDataService.sendEmail(this.services);\r\n            }\r\n            this.updateServiceData(service);\r\n          } else {\r\n            if (status === 'UP') {\r\n              service.upTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n            }else{\r\n              service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n            }\r\n          }\r\n          service.status = status;\r\n          //this.updateServiceData(service);\r\n        }\r\n      // },\r\n      // error => {\r\n      //   console.log(`Error monitoring ${name}: ${error.message}`);\r\n      //   const status = \"DOWN\";\r\n      //   const dateTime = new Date();\r\n      //   const service = this.services.find(s => s.url === url);\r\n      //   // if(startTime===null)\r\n      //   //     startTime=dateTime;\r\n      //   if (!service) {\r\n      //     const serve =   {\r\n      //       id,\r\n      //       name,\r\n      //       url,\r\n      //       startUrl,\r\n      //       stopUrl,\r\n      //       status,\r\n      //       startTime,\r\n      //       stopTime,\r\n      //       upTime,\r\n      //       downTime,\r\n      //       subscription\r\n      //     };\r\n      //     this.services.push(serve);\r\n      //     this.updateServiceData(serve);\r\n      //   } else {\r\n      //     if (service.status === status) {\r\n      //       if (service.stopTime) {\r\n      //         const lastStopTime = service.downTime;\r\n      //         service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n      //         if(lastStopTime!== service.downTime)\r\n      //         this.updateServiceData(service);\r\n      //       } else {\r\n      //         service.downTime = this.getTimeDiff(new Date(service.startTime), dateTime);\r\n      //         service.stopTime = dateTime.toISOString();\r\n      //         this.updateServiceData(service);\r\n      //       }\r\n      //       this.serviceDataService.sendEmail(this.services);\r\n      //    }\r\n      //     service.status = status;\r\n      //     //this.updateServiceData(service);\r\n      //   }\r\n      // });\r\n      \r\n\r\n    // const index = this.services.findIndex(s => s.url === url);\r\n    // if (index === -1 && !service) {\r\n    //   subscription.unsubscribe();\r\n    // }\r\n   // });\r\n  }\r\n  \r\n  \r\n  getTimeDiff(start: Date, end: Date): string {\r\n    console.log(\"start:\"+ start);\r\n    console.log(\"end:\"+ end);\r\n    const diffInMs = Math.abs(end.getTime() - start.getTime());\r\n    const diffInHours = Math.ceil(diffInMs / (1000 * 60 * 60));\r\n    return `${diffInHours} hour(s)`;\r\n  }\r\n  \r\n\r\n  startService(startUrl: string) {\r\n    this.http.post<any>(`${startUrl}`, {}).subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  stopService(stopUrl: string) {\r\n    this.http.post<any>(`${stopUrl}`, {}).subscribe(data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n  removeService(serviceId: number){\r\n    const data: ServiceData = new ServiceData();\r\n    data.id=serviceId;\r\n    const index = this.services.findIndex((s: any) => s.id === serviceId);\r\n    const service = this.services.find(s => s.id === serviceId);\r\n      // Remove the 'service' object from the array\r\n      if (index !== -1) {\r\n        // Unsubscribe from the interval when the service is removed\r\n        console.log(\"service removed: \",service);\r\n        service.subscription.unsubscribe();\r\n        this.services.splice(index, 1);\r\n      }\r\n      this.serviceDataService.removeServiceData(data);\r\n     // this.loadServiceData();\r\n  }\r\n\r\n  addServiceData() {\r\n    if(this.serviceUrl===null || this.appName===null){\r\n      alert(\"Service Name and URL is required\");\r\n      return;\r\n    }\r\n    const service = this.services.find(s => s.url === this.serviceUrl);\r\n    if(!service){\r\n    const data: ServiceData = new ServiceData();\r\n    data.url = this.serviceUrl;\r\n    data.startUrl=this.startUrl;\r\n    data.stopUrl=this.stopUrl;\r\n    data.name = this.appName;\r\n    data.startTime= new Date().toISOString();\r\n   \r\n    this.serviceDataService.addServiceData(data);\r\n   // this.loadServiceData();\r\n    \r\n    }\r\n    else {\r\n      alert(\"Service url \" + this.serviceUrl +\" already exists\");\r\n    }\r\n\r\n  }\r\n  updateServiceData(service: any) {\r\n    const data: ServiceData = new ServiceData();\r\n    data.url = service.url;\r\n    data.startUrl=service.startUrl;\r\n    data.stopUrl=service.stopUrl;\r\n    data.name = service.name;\r\n    data.startTime = service.startTime;\r\n    data.stopTime = service.stopTime;\r\n    data.downTime=service.downTime;\r\n    data.status = service.status;\r\n    data.upTime = service.upTime;\r\n    data.id=service.id;\r\n    this.serviceDataService.updateServiceData(data);\r\n\r\n  }\r\n}\r\n","<div class=\"image-container\">\r\n<img src=\"assets/monitor.gif\" alt=\"Service Monitor\" width=\"200\" height=\"150\">\r\n</div>\r\n<h1 class=\"center-text\">Service Monitoring Dashboard\r\n</h1>\r\n<div>\r\n  <h2>Monitor Services</h2>\r\n  <form #serviceDataForm=\"ngForm\">\r\n   <tr style=\"background-color: #f2f2f2;\"> <td>\r\n    <label>\r\n      Application Name:\r\n      <input type=\"text\" name=\"appName\" [(ngModel)]=\"appName\" required>\r\n    </label>\r\n  </td>\r\n    <br><br>\r\n    <td>\r\n    <label>\r\n      Service URL:\r\n      <input type=\"text\" name=\"serviceUrl\" [(ngModel)]=\"serviceUrl\" required>\r\n    </label>\r\n  </td>\r\n    <br>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n    <label>\r\n      Start URL:\r\n      <input type=\"text\" name=\"serviceDomain\" [(ngModel)]=\"startUrl\" required>\r\n    </label>\r\n  </td>\r\n    <br>\r\n    <td>\r\n    <label>\r\n      Stop URL:\r\n      <input type=\"text\" name=\"serviceDomain\" [(ngModel)]=\"stopUrl\" required>\r\n    </label>\r\n  </td>\r\n</tr>\r\n    <br>\r\n    <button type=\"submit\" (click)=\"addServiceData()\">Add Service Data</button>\r\n  </form>\r\n</div>\r\n<br><br>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>URL</th>\r\n      <th>Status</th>\r\n      <th>Last Up Time</th>\r\n      <th>Last Down Time</th>\r\n      <th>Up Time</th>\r\n      <th>Down Time</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let service of services\">\r\n      <td>{{ service.name }}</td>\r\n      <td>{{ service.url }}</td>\r\n      <td [ngClass]=\"{'status-up': service.status == 'UP', 'status-down': service.status == 'DOWN'}\">{{ service.status }}</td>\r\n      <td>{{ service.startTime | date:'medium' }}</td>\r\n      <td>{{ service.stopTime ? (service.stopTime | date:'medium') : '' }}</td>\r\n      <td *ngIf=\"service.upTime\">{{ service.upTime }}</td>\r\n      <td *ngIf=\"!service.upTime\">N/A</td>\r\n      <td *ngIf=\"service.downTime\">{{ service.downTime }}</td>\r\n      <td *ngIf=\"!service.downTime\">N/A</td>\r\n      <td>\r\n        <button [disabled]=\"service.status === 'UP'\" (click)=\"startService(service.startUrl)\">Start</button>\r\n        <button [disabled]=\"service.status === 'DOWN'\" (click)=\"stopService(service.stopUrl)\">Stop</button>\r\n        <button  (click)=\"removeService(service.id)\">Remove</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; // Import FormsModule\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ServiceData } from './service-data';\r\nimport { ServiceDetails } from './service-details';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ServiceEvent } from './service-event';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceDataService {\r\n \r\n  private serviceDataUrl = '/servicedata'; // URL to Spring Boot backend\r\n  private serviceDataSubject = new BehaviorSubject<ServiceData[]>([]);\r\n  public serviceData$ = this.serviceDataSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.loadServiceData();\r\n    this.subscribeToServiceEvents();\r\n  }\r\n\r\n  private subscribeToServiceEvents() {\r\n    console.log(\"subcribing service-event:\");\r\n    this.http.get<Object[]>(`${this.serviceDataUrl}/service-events`).subscribe(\r\n      (responses: Object[]) => {\r\n        console.log(\"responses:\", responses);\r\n        // const updatedServices = responses.map(response => {\r\n        //   console.log(\"response:\", response);\r\n        //   const existingService = this.serviceDataSubject.value.find(service => service.id === response.serviceId);\r\n        //   if (existingService) {\r\n        //     existingService.status = response.serviceResponse.status;\r\n        //     // Update other properties as needed (uptime, downtime, etc.)\r\n        //   }\r\n        //   return existingService;\r\n        // });\r\n        // this.serviceDataSubject.next(updatedServices);\r\n      },\r\n      error => {\r\n        console.error('Error getting service events:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadServiceData() {\r\n    this.http.get<ServiceData[]>(this.serviceDataUrl + '/load').subscribe(data => {\r\n      this.serviceDataSubject.next(data);\r\n      console.log(\"data:\", data);\r\n    }, error => {\r\n      this.serviceDataSubject.next(null);\r\n      console.log(\"Error loading service data: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public addServiceData(serviceData: ServiceData) {\r\n    this.http.post<ServiceData>(this.serviceDataUrl + '/add', serviceData).subscribe(() => {\r\n      //this.loadServiceData();\r\n    }, error => {\r\n      console.log(\"Error adding service data: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public updateServiceData(serviceData: ServiceData) {\r\n    this.http.post<ServiceData>(this.serviceDataUrl + '/update', serviceData).subscribe(() => {\r\n      //this.loadServiceData();\r\n    }, error => {\r\n      console.log(\"Error updating service data: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public getServiceDetails(serviceData: ServiceData) {\r\n    return this.http.post<ServiceDetails>(this.serviceDataUrl + '/getdetails', serviceData);\r\n    // .subscribe(data => {\r\n    //   console.log(data);\r\n    //   return data;\r\n    // });\r\n  }\r\n  public removeServiceData(serviceData: ServiceData) {\r\n    this.http.post(this.serviceDataUrl + '/remove', serviceData).subscribe(() => {\r\n      console.log(\"removed:\" + serviceData.id);\r\n      //this.loadServiceData();\r\n    },\r\n    error => {\r\n      console.log(\"Error removing service: \" + error.message);\r\n    });\r\n  }\r\n\r\n  public sendEmail(serviceList: any[]) {\r\n    const downServices = serviceList.filter(service => service.status === 'DOWN');\r\n    \r\n    if (downServices.length > 0) {\r\n      const serviceDataList: ServiceData[] = downServices.map(service => {\r\n        const serviceData:ServiceData = {\r\n          id: service.id,\r\n          name: service.name,\r\n          status: service.status,\r\n          url: service.url,\r\n          startUrl: service.startUrl,\r\n          stopUrl: service.stopUrl,\r\n          startTime: service.startTime,\r\n          stopTime: service.stopTime,\r\n          upTime: service.upTime,\r\n          downTime: service.downTime\r\n        };\r\n        return serviceData;\r\n      });\r\n      this.http.post<void>(`${this.serviceDataUrl}/sendEmail`, serviceDataList).subscribe(() => {\r\n        console.log('Email sent successfully.');\r\n      }, error => {\r\n        console.log('Error sending email:', error);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","export class ServiceData {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n    url:string;\r\n    startUrl: string;\r\n    stopUrl: string;\r\n    startTime:string;\r\n    stopTime:string;\r\n    upTime:string;\r\n    downTime:string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}